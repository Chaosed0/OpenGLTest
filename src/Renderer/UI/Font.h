#pragma once

#include <glm/glm.hpp>

#include <ft2build.h>
#include <freetype/freetype.h>

#include <vector>
#include <memory>

#include "Renderer/TexturePacker.h"
#include "Renderer/Model.h"

struct Character {
	glm::ivec2 origin;     // Position of glyph on texture atlas
	glm::ivec2 size;       // Size of glyph
	glm::ivec2 bearing;    // Offset from baseline to left/top of glyph
	FT_Pos     advance;    // Offset to advance to next glyph
};

class Font
{
public:
	Font();
	Font(const std::string& fontPath, int height);
	
	/*!
	 * \brief Initializes the font object by loading glyphs from a font file on disk.
	 * \param fontPath The path to the font to load.
	 * \param height The size of the font which this Font will load.
	 */
	void loadCharacters(const std::string& fontPath, int height);

	/*!
	 * \brief Returns the OpenGL texture ID after loadCharacters has been called.
	 */
	unsigned getTextureId() const;

	/*!
	 * \brief Returns the total size of the font atlas generated after loadCharacters was called.
	 */
	glm::ivec2 getTextureSize() const;

	/*!
	 * \brief Gets the characteristics of a single glyph.
	 */
	Character getCharacter(unsigned int i) const;

	/*!
	 * \brief Saves the font atlas generated by loadCharacters to a bmp file for debugging purposes.
	 * \param file The location to save the bmp file.
	 */
	void saveAtlasToFile(const std::string& file) const;

	/*!
	 * \brief Generates a mesh containing some line of text. 
	 */
	Mesh generateMesh(const std::string& text);
private:
	/*! The OpenGL texture ID for the font atlas. */
	unsigned textureID;

	/*! The characters which were loaded during loadCharacters. */
	std::vector<Character> characters;

	/*! The texture packer we used to pack the character textures. */
	TexturePacker texturePacker;

	/*!
	 * \brief Packs a single character into the font atlas.
	 * \param character The character to pack. Everything must be filled except origin. The origin field
	 *		is filled with the top-left position of the character within the font atlas.
	 * \param bitmap The actual glyph data which we pack into the atlas.
	 */
	void packCharacter(Character& character, const FT_Bitmap& bitmap);
};